name: 🚀 Deploy SMTP Server

on:
  push:
    branches:
      - main
    paths:
      - "packages/smtp-server/**"
      - ".github/workflows/deploy-smtp-server.yml"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 22

      - name: 📥 Install deps
        run: npm install

      - name: 🔬 Lint
        run: npm run lint:client && npm run lint:database && npm run lint:smtp-server

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 22

      - name: 📥 Install deps
        run: npm install

      - name: 🔎 Type check
        run: npm run typecheck:client && npm run typecheck:database && npm run typecheck:smtp-server

  test:
    name: 🃏 Jest Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    services:
      mongo:
        image: mongo:7.0.12
        env:
          MONGO_INITDB_DATABASE: ghostmail-testing
        ports:
          - 27017:27017
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 22

      - name: 📥 Install deps
        run: npm install

      - name: 🧪 Test
        run: npm run test:smtp-server
        env:
          MAIL_DOMAIN: ghostmail.dev
          SMTP_PORT: 2525
          MONGO_CONNECTION_STRING: mongodb://localhost:27017/ghostmail-testing
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    # only deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main')}}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
      #   - name: 👀 Read app name
      #     uses: SebRollen/toml-action@v1.0.2
      #     id: app_name
      #     with:
      #       file: packages/client/fly.toml
      #       field: app

      #   - name: 🎈 Setup Fly
      #     uses: superfly/flyctl-actions/setup-flyctl@master

      #   - name: 🚀 Deploy Production
      #     run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }} --config ./packages/smtp-server/fly.toml
      #     env:
      #       FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Dependencies
        run: bun install

      - name: Build
        run: cd packages/smtp-server && bun run build

      - name: Deploy to server
        uses: easingthemes/ssh-deploy@main

        with:
          SSH_PRIVATE_KEY: ${{ secrets.GHOSTMAIL_SSH_PRIVATE_KEY }}
          ARGS: "-avz"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.GHOSTMAIL_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.GHOSTMAIL_REMOTE_USER }}
          TARGET: ${{ secrets.GREMOTE_TARGET }}/smtp-server/
          # EXCLUDE: "/dist/, /node_modules/"
          # SCRIPT_BEFORE: |
          #   whoami
          #   ls -al
          # SCRIPT_AFTER: |
          #   whoami
          #   ls -al
          #   echo $RSYNC_STDOUT
